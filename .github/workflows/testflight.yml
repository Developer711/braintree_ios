name: TestFlight
on: [push, pull_request, workflow_dispatch]
jobs:
  deploy:
    name: Upload Demo to TestFlight
    runs-on: macOS-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Install gpg
        run: brew install gnupg
      - name: Decrypt certs
        env:
          TESTFLIGHT_CERTS_DECRYPT_PASSPHRASE: ${{ secrets.TESTFLIGHT_CERTS_DECRYPT_PASSPHRASE }}
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.TESTFLIGHT_CERTS_DECRYPT_PASSPHRASE }} --output ./.github/secrets/BTDemo_Base_SDK__App_Store.mobileprovision ./.github/secrets/BTDemo_Base_SDK__App_Store.mobileprovision.gpg
          gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.TESTFLIGHT_CERTS_DECRYPT_PASSPHRASE }} --output ./.github/secrets/apple_distribution_key.p12 ./.github/secrets/apple_distribution_key.p12.gpg
      - name: Set up signing & profiles
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ./.github/secrets/BTDemo_Base_SDK__App_Store.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/BTDemo_Base_SDK__App_Store.mobileprovision
          security create-keychain -p "" build.keychain
          security import ./.github/secrets/apple_distribution_key.p12 -t agg -k ~/Library/Keychains/build.keychain -P ${{ secrets.APPLE_DISTRIBUTION_KEY_PASSWORD }} -A
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain
      - name: Install pods
        run: pod install
      - name: make build directory
        run: mkdir $PWD/build
      # - name: Archive project
      #   run: xcodebuild -workspace Braintree.xcworkspace -scheme Demo -sdk iphoneos -configuration Release archive -archivePath $PWD/build/Demo.xcarchive -allowProvisioningUpdates | xcpretty
      # - name: Export .ipa
      #   run: xcodebuild -exportArchive -allowProvisioningUpdates -archivePath $PWD/build/Demo.xcarchive -exportOptionsPlist Demo/Application/Supporting\ Files/exportOptions.plist -exportPath $PWD/build/Demo.ipa | xcpretty
      - name: Fastlane
        run: fastlane gym --workspace Braintree.xcworkspace --scheme Demo --output_directory $PWD/build/Demo.ipa --export_options Demo/Application/Supporting\ Files/exportOptions.plist --clean --verbose
      - name: Upload app
        if: success()
        env:
          USERNAME: ${{ secrets.APPLEID_TEAM_SDK_USERNAME }}
          PASSWORD: ${{ secrets.APPLEID_TEAM_SDK_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f $PWD/build/Demo.ipa -u "$USERNAME" -p "$PASSWORD" --verbose
