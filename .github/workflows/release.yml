name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
jobs:
  release:
    name: Release
    runs-on: macOS-11
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Xcode 12.5
        run: sudo xcode-select -switch /Applications/Xcode_12.5.app

      - name: Check for unreleased section in changelog
        run: grep "## unreleased" CHANGELOG.md || (echo "::error::No unreleased section found in CHANGELOG"; exit 1)

      - name: Set git username and email
        run: |
          git config user.name braintreeps
          git config user.email code@getbraintree.com
      - name: Update version
        run: |
          today=$(date +'%Y-%m-%d')
          sed -i '' 's/## unreleased.*/## '"${{ github.event.inputs.version }}"' ('"$today"')/' CHANGELOG.md
          sed -i '' 's/\(s\.version *= *\).*/\1"'"${{ github.event.inputs.version }}"'\"/' Braintree.podspec
          sed -i '' 's/\(#define BRAINTREE_VERSION (@\).*/\1"'"${{ github.event.inputs.version }}"'\")/' BraintreeCore/Braintree-Version.h
          plutil -replace CFBundleVersion -string ${{ github.event.inputs.version }} -- 'Demo/Supporting Files/Braintree-Demo-Info.plist'
          plutil -replace CFBundleShortVersionString -string ${{ github.event.inputs.version }} -- 'Demo/Supporting Files/Braintree-Demo-Info.plist'
          plutil -replace CFBundleVersion -string ${{ github.event.inputs.version }} -- 'BraintreeCore/Info.plist'
          plutil -replace CFBundleShortVersionString -string ${{ github.event.inputs.version }} -- 'BraintreeCore/Info.plist'
          git add .
          git commit -m 'Bump version to ${{ github.event.inputs.version }}'
          git tag ${{ github.event.inputs.version }} -a -m 'Release ${{ github.event.inputs.version }}'
      
      - name: Push commits and tag
        run: git push origin HEAD ${{ github.event.inputs.version }}

      - name: Save changelog entries to a file
        run: |
          sed -e '1,/##/d' -e '/##/,$d' CHANGELOG.md > changelog_entries.md
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          body_path: changelog_entries.md
          draft: false
          prerelease: false

      - name: Create Carthage pre-built frameworks
        run: |
          rm -rf Demo/
          carthage build --no-skip-current
          carthage archive "BraintreeAmericanExpress" "BraintreeApplePay" "BraintreeCard" "BraintreeCore" "BraintreeDataCollector" "BraintreePaymentFlow" "BraintreePayPal" "BraintreeUI" "Braintree3DSecure" "BraintreeUnionPay" "BraintreeVenmo" "PayPalDataCollector" "PayPalOneTouch" "PayPalUtils" --output Braintree.framework.zip
          git checkout Demo/
      - name: Upload Carthage pre-built frameworks to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Braintree.framework.zip
          asset_name: Braintree.framework.zip
          asset_content_type: application/zip

      - name: Create Carthage pre-built xcframeworks
        run: |
          rm -rf Demo/
          rm -rf Carthage
          carthage build --no-skip-current --use-xcframeworks
          zip -r Braintree.xcframework.zip Carthage
          git checkout Demo/
      - name: Upload Carthage pre-built xcframeworks to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Braintree.xcframework.zip
          asset_name: Braintree.xcframework.zip
          asset_content_type: application/zip

      - name: Publish to CocoaPods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: pod trunk push Braintree.podspec

      - name: Publish reference docs
        run: |
          gem install jazzy
          brew install sourcekitten
          sourcekitten doc -- -workspace Braintree.xcworkspace -scheme PayPalDataCollector -destination 'name=iPhone 11,platform=iOS Simulator' > swiftDoc.json
          sourcekitten doc --objc Docs/Braintree-Umbrella-Header.h -- \
            -x objective-c -isysroot $(xcrun --show-sdk-path --sdk iphonesimulator) \
            -I $(pwd)/Sources/BraintreeAmericanExpress/Public \
            -I $(pwd)/Sources/BraintreeApplePay/Public \
            -I $(pwd)/Sources/BraintreeCard/Public \
            -I $(pwd)/Sources/BraintreeCore/Public \
            -I $(pwd)/Sources/BraintreeDataCollector/Public \
            -I $(pwd)/Sources/BraintreePaymentFlow/Public \
            -I $(pwd)/Sources/BraintreePayPal/Public \
            -I $(pwd)/Sources/BraintreePayPalUtil/Public \
            -I $(pwd)/Sources/BraintreePayPalOneTouch/Public \
            -I $(pwd)/Sources/Braintree3DSecure/Public \
            -I $(pwd)/Sources/BraintreeUnionPay/Public \
            -I $(pwd)/Sources/BraintreeVenmo/Public \
            > objcDoc.json
          jazzy \
            --sourcekitten-sourcefile swiftDoc.json,objcDoc.json \
            --author Braintree \
            --author_url http://braintreepayments.com \
            --github_url https://github.com/braintree/braintree_ios \
            --github-file-prefix https://github.com/braintree/braintree_ios/tree/${{ github.event.inputs.version }} \
            --theme fullwidth \
            --output ${{ github.event.inputs.version }}
          git checkout gh-pages
          ln -sfn ${{ github.event.inputs.version }} current
          git add current ${{ github.event.inputs.version }}
          git commit -m "Publish ${{ github.event.inputs.version }} docs to github pages"
          git push